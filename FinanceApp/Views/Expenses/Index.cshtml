@model IEnumerable<FinanceApp.Models.Expense>

<h2>Expenses</h2>

<!-- Search Form -->
<div class="mb-3">
    <form asp-action="Search" method="get" class="form-inline">
        <div class="input-group">
            <input type="text" name="description" class="form-control" placeholder="Search by description" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </form>
</div>

<!-- Filter by Category Dropdown -->
<div class="mb-3">
    <form asp-action="ByCategory" method="get" class="form-inline">
        <div class="input-group">
            <select name="category" class="form-control">
                <option value="">All Categories</option>
                <option value="Food">Food</option>
                <option value="Transport">Transport</option>
                <option value="Entertainment">Entertainment</option>
                <option value="Utilities">Utilities</option>
                <option value="Other">Other</option>
            </select>
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>
</div>

<!-- Expenses Table -->
<div class="container">
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="table-light">
                <tr>
                    <th scope="col">Description</th>
                    <th scope="col">Amount</th>
                    <th scope="col">Category</th>
                    <th scope="col">Date</th>
                    <th scope="col">Actions</th> <!-- New column for actions -->
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Description</td>
                            <td>@item.Amount.ToString("F2") $</td>
                            <td>@item.Category</td>
                            <td>@item.Date.ToString("yyyy-MM-dd")</td>
                            <td>
                                <!-- Edit Button -->
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                                <!-- Delete Button -->
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">No expenses found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Add Expense Button -->
<div class="mt-3">
    <a asp-action="Create" class="btn btn-success">Add New Expense</a>
</div>

<!-- Expenses Overview Chart -->
<h2 class="mt-5">Expenses Overview</h2>
<div style="width: 100%; max-width: 500px; margin: auto;">
    <canvas id="myChart"></canvas>
</div>

<!-- Chart.js Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const ctx = document.getElementById('myChart').getContext('2d');

        fetch('/Expenses/GetChart')
            .then(response => response.json())
            .then(data => {
                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: data.map(d => d.category),
                        datasets: [{
                            data: data.map(d => d.total),
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.6)',
                                'rgba(54, 162, 235, 0.6)',
                                'rgba(255, 206, 86, 0.6)',
                                'rgba(75, 192, 192, 0.6)',
                                'rgba(153, 102, 255, 0.6)',
                                'rgba(255, 159, 64, 0.6)'
                            ],
                            borderColor: '#ffffff',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top'
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return tooltipItem.label + ': $' + tooltipItem.raw.toFixed(2);
                                    }
                                }
                            }
                        }
                    }
                });
            })
            .catch(error => console.error('Error fetching chart data:', error));
    });
</script>